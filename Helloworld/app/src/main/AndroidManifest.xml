<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    package="com.zyx.helloworld">

    <uses-permission android:name="android.permission.INTERNET" />
    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />
    <uses-permission
        android:name="android.permission.MOUNT_UNMOUNT_FILESYSTEMS"
        tools:ignore="ProtectedPermissions" />

    <application
        android:allowBackup="true"
        android:icon="@mipmap/ic_launcher"
        android:label="@string/app_name"
        android:requestLegacyExternalStorage="true"
        android:roundIcon="@mipmap/ic_launcher_round"
        android:supportsRtl="true"
        android:theme="@style/AppTheme">
        <activity android:name=".ObjectAnimActivity"></activity>
        <activity android:name=".broadcast.BroadActivity2" />
        <activity android:name=".broadcast.BroadActivity" />
        <activity android:name=".datastorage.FileActivity" />
        <activity android:name=".datastorage.SharedPreferencesActivity" />
        <activity android:name=".datastorage.DataStorageActivity" />
        <activity android:name=".HandlerActivity" />
        <activity android:name=".EventActivity" />
        <activity android:name=".fragment.ContainerActivity" />
        <activity
            android:name=".jump.BActivity"
            android:label="B"
            android:launchMode="singleTask">
            <intent-filter>
                <action android:name="com.zyx.test.BActivity" />

                <category android:name="android.intent.category.DEFAULT" />
            </intent-filter>
        </activity>
        <!--
    standard:标准模式。 Activity是由任务栈管理的，每启动一个Acitivity，就会被放入栈中，按返回键，就会
            从栈顶移除一个Activity
        -->
        <!--
    snigleTop:栈顶复用模式。当要启动的目标Activity已经位于栈顶时，不会创建新的实例，会复用栈顶的Activity，
            并且其onNewIntent()方法会被调用；如果目标Activity不再栈顶，则跟standard一样创建新的实例。
        -->
        <!--
    singleTask: 栈内复用模式。在同一个任务栈中，如果要启动的目标Activity已经在栈中，则会复用该Activity，并调用其onNewIntent
            方法，并且该Activity上面的Activity会被清除；如果栈中没有，则创建新的实例
        -->
        <!-- singleInstance:全局单例模式。 全局复用，不管哪个task栈，只要存在目标Activity，就复用。每个Activity占有一个新的Task栈 -->
        <activity
            android:name=".jump.AActivity"
            android:label="A"
            android:launchMode="singleTask" />
        <activity android:name=".LifeCycleActivity" />
        <activity android:name=".PopupWindowActivity" />
        <activity android:name=".CustomDialogActivity" />
        <activity android:name=".ProgressActivity" />
        <activity
            android:name=".MainActivity"
            android:screenOrientation="portrait">
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />

                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>
        <activity android:name=".DialogActivity" />
        <activity android:name=".ToastActivity" />
        <activity android:name=".WebViewActivity" />
        <activity android:name=".recyclerview.PullRecyclerViewActivity" />
        <activity android:name=".recyclerview.GridRecyclerViewActivity" />
        <activity android:name=".recyclerview.HorRecyclerViewActivity" />
        <activity android:name=".recyclerview.LinearRecyclerViewActivity" />
        <activity android:name=".recyclerview.RecycleViewActivity" />
        <activity android:name=".gridview.GridActivity" />
        <activity android:name=".listview.ListViewActivity" />
        <activity android:name=".ImageViewActivity" />
        <activity android:name=".CheckBoxActivity" />
        <activity android:name=".RadioButtonActivity" />
        <activity android:name=".EditTextActivity" />
        <activity android:name=".ButtonActivity" />
        <activity android:name=".TextViewActivity" />
        <activity android:name=".UIActivity" />
    </application>

</manifest>